# CBD - Lab 201 - Pedro Sobral

1 - db.restaurants.find()

2 - db.restaurants.find({}, {restaurant_id: 1, nome: 1, localidade: 1, gastronomia: 1})

3 - db.restaurants.find({},{restaurant_id: 1, nome: 1, localidade: 1, zipcode:1, _id: 0})

4 - db.restaurants.find({localidade: "Bronx"},{restaurant_id: 1, localidade: 1,  _id: 0}).count()

5 - db.restaurants.find({localidade: "Bronx"},{restaurant_id: 1, nome: 1,  localidade: 1,  _id: 0}).limit(15).sort({nome:1})

6 - db.restaurants.find({"grades.score": {$gt: 85}}, { nome: 1,  _id : 0})

7 - db.restaurants.find({"grades.score": {$gt: 85, $lt: 100}}, { nome: 1,  _id : 0})

8 - db.restaurants.find({"address.coord.0": {$lt: -95.7}}, { nome: 1,  _id : 0})

9 - db.restaurants.find({gastronomia: "American", "grades.score": {$gt: 70}, "address.coord.0": {$lt: -65}}, { nome: 1, _id : 0})

10 - db.restaurants.find({nome : {$regex: /^Wil/ }}, { restaurant_id: 1, nome: 1, localidade: 1, gastronomia: 1, _id : 0})

11 - db.restaurants.find( { $and : [{localidade: "Bronx" }, {gastronomia: {$in : ["American","Chinese"] }}]} ,{ nome:1, localidade : 1 , gastronomia:1, _id:0})

12 - db.restaurants.find({localidade: {$in : ["Staten Island", "Queens", "Brooklyn"] }} ,{restaurant_id: 1, nome: 1 , localidade: 1, 

13 - db.restaurants.find({"grades.score": {$not: {$gt: 3}}} ,{nome: 1 , localidade: 1, score: 1, gastronomia: 1, _id: 0})

14 - db.restaurants.find({$and : [{"grades.grade": "A"}, {"grades.score": 10}, {"grades.date": new Date("2014-08-11T00:00Z")}]}, {nome: 1, _id: 0})

15 - db.restaurants.find({$and : [{"grades.1.grade": "A"}, {"grades.1.date": new Date("2014-08-11T00:00Z")}]}, {restaurant_id: 1, nome: 1, "grades.score": 1, _id: 0})

16 - db.restaurants.find({"address.coord.1": {$gt : 42, $lte : 52}}, {restaurant_id: 1, nome: 1, "address.rua": 1, "address.coord": 1, _id: 0})

17 - db.restaurants.find({}, {nome: 1, gastronomia: 1, localidade: 1, _id: 0}).sort({gastronomia: 1, localidade: -1})

18 - db.restaurants.find({$and: [{localidade: "Brooklyn"}, {gastronomia: {$ne: "American"}}, {"grades.grade": "A"}]}, {nome: 1, localidade: 1, grade: 1, gastronomia: 1, _id: 0}).sort({gastronomia: -1})

19 - db.restaurants.aggregate([{$group: {_id: "$localidade", amount: {$sum: 1}}}])

20 - db.restaurants.aggregate([{$project: {_id:"$nome", avg:{$avg:"$grades.score"}}}, {$match:{avg:{$gt:30}}}])

21 - db.restaurants.aggregate([{$project: {_id:"$nome", gastronomia:"$gastronomia", coords: "$address.coord", sum:{$sum:"$grades.score"}}}, {$match:{sum:{$gt:75}, gastronomia:"American", "coords.0":{$lt:-60}}}])

22 - db.restaurants.aggregate([{$project: {_id: "$nome", avg: {$avg: "$grades.score"}}}, {$sort: {avg: -1}}, {$limit: 3}])

23 - db.restaurants.distinct("gastronomia", {"address.rua": "Fifth Avenue"}).length

24 - db.restaurants.aggregate([{$group: {_id: "$address.rua", sum: {$sum: 1}}}, {$sort: {sum: -1}}])

25 - Descreva 5 perguntasadicionaisà base dados(alíneas 26 a 30)e apresente igualmente a solução de pesquisa para cada questão.

26 -  Todos os restaurantes de Brooklyn que possuem um score de nota 10 ou mais
   -  db.restaurants.find({$and: [{localidade: "Brooklyn"}, {"grades.score": {$gt: 10}}]},{nome: 1, _id: 0})

27 - O restaurante em cada localidade com a nota mais alta
   - db.restaurants.aggregate([{$group: {_id: "$localidade",nome : 1 ,max: {$max: "$grades.score"}}}]) 

27 - Liste o nome do restaurante, para qual o grade é divisivel por 7 e o resto é 0
   - db.restaurants.find({"grades.score" : {$mod : [4,1]}}, {"restaurant_id" : 1,"name":1,"grades":1})

29 - Verifique se cada restaurante tem um address associado
   - db.restaurants.find({"address.street" : { $exists : true }}).count()

30 - Liste todos os restaurantes por ordem decrescente de ordem alfabética do nome
   - db.restaurants.find().sort({"name":-1})